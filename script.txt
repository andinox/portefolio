let load = 0;

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

function getRandomArbitraryInt(min, max) {
    return Math.floor(Math.random() * (max - min) + min);
}

function display_load() {
    const loader = document.getElementById("loader");
    load = (load > 98) ? 100 : load;
    loader.innerHTML = `${load}%`;
    load += Math.floor(getRandomArbitraryInt(1, 4));
}

async function set_display() {
    let temps;
    while (load <= 100) {
        temps = getRandomArbitraryInt(10, 15); // 20 - 150
        display_load()
        await sleep(temps);
    }
    const loader = document.getElementById("loader");
    loader.classList.add("finish");
    setTimeout(set_load, 1000);
}
set_display();

function set_load() {
    const space = document.getElementById("space");
    space.classList.add("finish-space");
    setTimeout(set_load_alpha, 2500);
}

async function set_load_alpha() {
    const balise = document.getElementById("balise");
    const balise2 = document.getElementById("balise2");
    balise.classList.add("finish-balise-alpha");
    balise2.classList.add("finish-balise-alpha");
    await sleep(1000);
    document.getElementById("bg").style.display = "none";
    diplay_constellation();
    display_mouse();
    
}

function display_mouse() {
    const text_mouse = document.getElementsByClassName("scroll")[0];
    const mouse = document.getElementsByClassName("mouse")[0];
    const down = document.getElementsByClassName("down")[0];
    const mouse_left = document.getElementById("mouse-left");
    const mouse_right = document.getElementById("mouse-right");
    const lang = document.getElementsByClassName("lang")[0];
    lang.classList.remove("none")
    text_mouse.classList.add("view");
    mouse.classList.add("view");
    down.classList.remove("none");
    down.classList.add("view");
    down.classList.add("animation");
    mouse_left.classList.add("mouse-left");
    mouse_right.classList.add("mouse-right");
}

function rad(n) {
    return n * Math.PI / 180;
}


let init = false;
let langages = [[],[],[],[],[],[],[],[]];
function init_const(width,height) {
    for (let i = 0; i < 8; i++) {
        langages[i].push(getRandomArbitraryInt(0,width));
        langages[i].push(getRandomArbitraryInt(0,height));
        langages[i].push(getRandomArbitraryInt(0,360));
    }
}

function move_constellation(width,height) {
    for (let i = 0; i < 8; i++) {
        if (langages[i][0] + 0.75*Math.cos(rad(langages[i][2])) < 0 || 
            langages[i][0] + 0.75*Math.cos(rad(langages[i][2])) > width) {
            langages[i][2] -= 180;
            langages[i][0] += 0.75*Math.cos(rad(langages[i][2]));
        } else {
            langages[i][0] += 0.75*Math.cos(rad(langages[i][2]))
        }
        if (langages[i][1] + 0.75*Math.cos(rad(langages[i][2])) < 0 || 
            langages[i][1] + 0.75*Math.cos(rad(langages[i][2])) > height) {
            langages[i][2] -= 180;
            langages[i][1] += 0.75*Math.cos(rad(langages[i][2]));
        } else {
            
            langages[i][1] += 0.75*Math.cos(rad(langages[i][2]));
        }
    }
}


function dist(a,b,c,d) {
    return Math.hypot((a - b) + (c - d))
}

function colision() {
    let a,b,c,d;
    for (let i = 0; i < 8; i++) {
        for (let u = 0; u < 8; u++) {
            a = langages[u][0];
            b = langages[i][0];
            c = langages[u][1];
            d = langages[i][1];
            console.log(dist(a,b,c,d));
            if (dist(a,b,c,d) < 10) {
                langages[i][2] -= 180;
            }
        }
    }
    
}

function diplay_constellation() {
    const const_div = document.getElementById("lvl");
    if (!init) {
        init_const(const_div.clientWidth-100,const_div.clientHeight-100);
        init = true;
    }
    move_constellation(const_div.clientWidth-100,const_div.clientHeight-100);
    //colision();
    let points = [[],[],[],[],[],[],[],[]]
    for (let i = 0; i < 8; i++) {
        points[i].push(langages[i][0]);
        points[i].push(langages[i][1]);
        points[i] = points[i].join(",");     
    }
    const_div.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink= "http://www.w3.org/1999/xlink" viewBox="0 0 ${const_div.clientWidth} ${const_div.clientHeight}"><polyline stroke="#9a64cc" stroke-width="6" fill="none" points="${points.join(" ")}"/> \
    <image xlink;href="typescipt.png" x="${langages[0][0]-25}" y="${langages[0][1]-25}" height="50" width="50" />
    </svg>`;
    
    setTimeout(diplay_constellation, 15);
}

let frensh = false;
let anglais = true;
function frensh_clic(click) {
    const frensh_ = document.getElementsByClassName("francais")[0];
    if (frensh) {
        frensh_.classList.remove("clicked_lang");
        frensh_.classList.add("not_clicked");
        frensh = false;
    } else {
        frensh_.classList.remove("not_clicked");
        frensh_.classList.add("clicked_lang");
        frensh = true;
    }
    if (!click) {
        anglais_clic(click = true);
    }
}
function anglais_clic(click) {
    const anglais_ = document.getElementsByClassName("anglais")[0];
    if (anglais) {
        anglais_.classList.remove("clicked_lang");
        anglais_.classList.add("not_clicked");
        anglais = false;
    } else {
        anglais_.classList.remove("not_clicked");
        anglais_.classList.add("clicked_lang");
        anglais = true;
    }
    if (!click) {
        frensh_clic(click = true);
    }
}